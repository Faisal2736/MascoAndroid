// Generated by view binder compiler. Do not edit!
package com.semicolons.masco.pk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.semicolons.masco.pk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderProductsItemsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView orderDetailProductMultiplyTextView;

  @NonNull
  public final TextView orderDetailProductNameTextView;

  @NonNull
  public final TextView orderDetailProductPriceTextView;

  @NonNull
  public final TextView orderDetailProductQuantityTextView;

  private OrderProductsItemsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView orderDetailProductMultiplyTextView,
      @NonNull TextView orderDetailProductNameTextView,
      @NonNull TextView orderDetailProductPriceTextView,
      @NonNull TextView orderDetailProductQuantityTextView) {
    this.rootView = rootView;
    this.orderDetailProductMultiplyTextView = orderDetailProductMultiplyTextView;
    this.orderDetailProductNameTextView = orderDetailProductNameTextView;
    this.orderDetailProductPriceTextView = orderDetailProductPriceTextView;
    this.orderDetailProductQuantityTextView = orderDetailProductQuantityTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderProductsItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderProductsItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_products_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderProductsItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.orderDetailProductMultiplyTextView;
      TextView orderDetailProductMultiplyTextView = rootView.findViewById(id);
      if (orderDetailProductMultiplyTextView == null) {
        break missingId;
      }

      id = R.id.orderDetailProductNameTextView;
      TextView orderDetailProductNameTextView = rootView.findViewById(id);
      if (orderDetailProductNameTextView == null) {
        break missingId;
      }

      id = R.id.orderDetailProductPriceTextView;
      TextView orderDetailProductPriceTextView = rootView.findViewById(id);
      if (orderDetailProductPriceTextView == null) {
        break missingId;
      }

      id = R.id.orderDetailProductQuantityTextView;
      TextView orderDetailProductQuantityTextView = rootView.findViewById(id);
      if (orderDetailProductQuantityTextView == null) {
        break missingId;
      }

      return new OrderProductsItemsBinding((ConstraintLayout) rootView,
          orderDetailProductMultiplyTextView, orderDetailProductNameTextView,
          orderDetailProductPriceTextView, orderDetailProductQuantityTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
