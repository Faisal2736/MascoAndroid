// Generated by view binder compiler. Do not edit!
package com.semicolons.masco.pk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.semicolons.masco.pk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout4;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView imgSearch;

  @NonNull
  public final ContentHomeBinding include3;

  @NonNull
  public final RelativeLayout rlSearch;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final Toolbar toolbar;

  private AppBarHomeBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBarLayout4,
      @NonNull ImageView imageView5, @NonNull ImageView imgSearch,
      @NonNull ContentHomeBinding include3, @NonNull RelativeLayout rlSearch,
      @NonNull TextView textView11, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout4 = appBarLayout4;
    this.imageView5 = imageView5;
    this.imgSearch = imgSearch;
    this.include3 = include3;
    this.rlSearch = rlSearch;
    this.textView11 = textView11;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout4;
      AppBarLayout appBarLayout4 = rootView.findViewById(id);
      if (appBarLayout4 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = rootView.findViewById(id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.img_search;
      ImageView imgSearch = rootView.findViewById(id);
      if (imgSearch == null) {
        break missingId;
      }

      id = R.id.include3;
      View include3 = rootView.findViewById(id);
      if (include3 == null) {
        break missingId;
      }
      ContentHomeBinding binding_include3 = ContentHomeBinding.bind(include3);

      id = R.id.rlSearch;
      RelativeLayout rlSearch = rootView.findViewById(id);
      if (rlSearch == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = rootView.findViewById(id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new AppBarHomeBinding((ConstraintLayout) rootView, appBarLayout4, imageView5,
          imgSearch, binding_include3, rlSearch, textView11, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
